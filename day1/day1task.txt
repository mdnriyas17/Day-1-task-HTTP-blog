1.HTTP :
>HyperText Transfer Protocol The communications protocol used to connect to Web servers on the Internet or on a local network.
>The primary function of HTTP is to establish a connection with the server and send HTML pages back to the user's browser. 
>It is also used to download data from the server either to the browser or to any requesting application that uses HTTP.
>Addresses of websites begin with an http:// prefix.
>For example: http://www.yahoo.com. 
>HTTPS (HTTP Secure) is the encrypted version of HTTP
HTTP Methods:
i)GET method:
>The HTTP GET method is used to read (or retrieve) a representation of a resource.
>In case of success (or non-error), GET returns a representation in JSON and an HTTP response status code of 200 (OK).
>In an error case, it most often returns a 404 (NOT FOUND) or 400 (BAD REQUEST).
>GET requests are used only to read data and not change it. So, they are considered safe.
ii)PUT method:
>PUT is used to send data to a server to create/update a resource.
>Calling the same PUT request multiple times will always produce the same result.
iii)POST method:
>POST is used to send data to a server to create/update a resource.
>Calling a POST request repeatedly have side effects of creating the same resource multiple times.
>On successful creation, HTTP response code 201 is returned.
iv)DELETE method:
>It is used to delete a resource identified by filters or ID.
>On successful deletion, the HTTP response status code 204 (No Content) returns with no response body.
>Repeatedly calling DELETE on that resource will often return a 404 (NOT FOUND) status code since it was already removed.
HTTP1.1 VS HTTP2
>The first version of HTTP was called HTTP/1.1. This version is still in use on the web.
>In 2015, a new version of HTTP called HTTP/2 was created.
>HTTP/2 is much faster and more efficient than HTTP/1.1
>n HTTP/2, developers have hands-on, detailed control over prioritization.
>This allows them to maximize perceived and actual page load speed to a degree that was not possible in HTTP/1.1.
>HTTP/2 offers a feature called weighted prioritization.
>This allows developers to decide which page resources will load first, every time. 
>In HTTP/2, when a client makes a request for a webpage, the server sends several streams of data to the client at once, instead of sending one thing after another.
>This method of data delivery is known as multiplexing.
>Developers can assign each of these data streams a different weighted value, and the value tells the client which data stream to render first.

2.Objects:
>Objects in programming can be a combination of variables, functions, and data structures.
>They make code more readable.
>The object properties can be different primitive values, other objects and functions.
>Properties can usually be changed, added, and deleted, but some are read only.
>It is a collection with format of key:value where value can be as number,string or even array.
Syntax:
let object_name={key:value};
Example:
let a={n1:"welcome",n2:200};
To access value of an object,
Syntax:
object_name.keyname
or
object_name["keyname]
console.log(a.n1);
console.log(a["n2"]);
Output:
welcome
200
>We can add new values in object 
Syntax:
object_name.keyname="value";
Example:
a.n3="hello";
